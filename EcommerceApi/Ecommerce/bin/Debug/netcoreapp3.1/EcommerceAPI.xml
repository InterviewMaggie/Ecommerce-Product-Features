<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EcommerceAPI</name>
    </assembly>
    <members>
        <member name="M:EcommerceAPI.Controllers.ProductsCategoryController.GetProductCategories">
            <summary>
            Get a list of product Categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Controllers.ProductsCategoryController.CreateProduct(EcommerceAPI.DTO.ProductCategoryDTO)">
            <summary>
            Create a product category
            </summary>
            <param name="pCategoryDTO">The Id of the product</param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Controllers.ProductsController.GetProducts">
            <summary>
            Get list of products
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Controllers.ProductsController.GetProduct(System.Int32)">
            <summary>
            Get individual product
            </summary>
            <param name="productId">The Id of the product</param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Controllers.ProductsController.GetProductWithCategory(System.Int32)">
            <summary>
            Get individual product
            </summary>
            <param name="categoryId">The Id of the product</param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Controllers.ProductsController.CreateProduct(EcommerceAPI.DTO.ProductDTO)">
            <summary>
            Create a product
            </summary>
            <param name="productsDTO">The Id of the product</param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductAttributesRepository.CreateProductAttribute(EcommerceAPI.Models.ProductAttribute)">
            <summary>
            Add product Attribute data
            </summary>
            <param name="productattribute"></param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductAttributesRepository.GetProductAttributes">
            <summary>
            Get a list of all productcategory ordered by productName
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductAttributesRepository.GetProductByAttributeId(System.Int32)">
            <summary>
            Get the product based on the categoryId
            </summary>
            <param name="attributeId"></param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductAttributesRepository.ProductAttributeExists(System.String)">
            <summary>
            Check if a productCategory exist by name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductAttributesRepository.ProductAttributeExists(System.Int32)">
            <summary>
            check if a productAttribute exists based on the id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductAttributesRepository.Save">
            <summary>
            Save new records or updated to the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductCategoryRepository.CreateProductCategory(EcommerceAPI.Models.ProductCategory)">
            <summary>
            Add product category data
            </summary>
            <param name="productcategory"></param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductCategoryRepository.GetProductCategories">
            <summary>
            Get a list of all productcategory ordered by productName
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductCategoryRepository.ProductCategoryExists(System.String)">
            <summary>
            Check if a productCategory exist by name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductCategoryRepository.ProductCategoryExists(System.Int32)">
            <summary>
            check if a productCategory exists based on the id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductCategoryRepository.Save">
            <summary>
            Save new records or updated to the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductsRepository.GetProductByProductId(System.Int32)">
            <summary>
            Get the product based on the productId
            </summary>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductsRepository.GetProductByCategoryId(System.Int32)">
            <summary>
            Get the product based on the categoryId
            </summary>
            <param name="categoryId"></param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductsRepository.GetProducts">
            <summary>
            Get a list of all products ordered by productName
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductsRepository.ProductExists(System.String)">
            <summary>
            Check if a product exist by name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductsRepository.ProductExists(System.Int32)">
            <summary>
            check if a product exists based on the id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductsRepository.Save">
            <summary>
            Save new records or updated to the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcommerceAPI.Repository.ProductsRepository.UpdateProduct(EcommerceAPI.Models.Product)">
            <summary>
            Modify Product 
            </summary>
            <param name="product"></param>
            <returns></returns>
        </member>
    </members>
</doc>
